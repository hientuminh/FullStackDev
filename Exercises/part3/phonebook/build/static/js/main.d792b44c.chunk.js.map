{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","props","person","name","number","value","onClick","e","window","confirm","onClickDeletePerson","target","handleClick","Persons","persons","map","key","PersonForm","onSubmissionChange","nameValue","numberValue","onInputChange","onSubmit","onChange","type","Filter","searchName","onPhoneBookFilterChange","Notification","message","content","className","App","useState","setPersons","setMessage","useEffect","personService","setSearchName","phoneBook","setPhoneBook","event","preventDefault","find","updatePhoneBook","changePhoneBook","returnedPhoneBook","catch","error","alert","phoneBookObject","length","concat","messageShow","newPhoneBook","filter","toLowerCase","includes","trim","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d792b44c.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const promise = axios.get(baseUrl)\n  return promise.then(response => response.data)\n}\n\nconst createPhoneBook = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updatePhoneBook = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePhoneBook = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, createPhoneBook, updatePhoneBook, deletePhoneBook }\n","import React from 'react'\n\nconst Person = (props) => {\n  const handleClick = (e) => {\n    if (window.confirm(`Do you want to delete ${props.person.name}?`)) {\n      props.onClickDeletePerson(e.target.value)\n    }\n  }\n  return (\n    <div>\n      {props.person.name}: {props.person.number} <button value={props.person.id} onClick={(e) => handleClick(e)}>delete</button>\n    </div>\n  )\n}\n\nexport default Person\n","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, onClickDeletePerson}) => {\n  const showPersons = () => persons.map(person =>\n    <Person\n      key={person.id}\n      person={person}\n      onClickDeletePerson={onClickDeletePerson}/>\n  )\n\n  return (\n    <div>{showPersons()}</div>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = ({onSubmissionChange, nameValue, numberValue, onInputChange}) => {\n  return (\n    <form onSubmit={onSubmissionChange}>\n      <div>\n        name: <input value={nameValue} name=\"name\" onChange={onInputChange}/>\n      </div>\n      <div>\n        number: <input value={numberValue} name=\"number\" onChange={onInputChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({searchName, onPhoneBookFilterChange}) => {\n  return (\n    <div>\n      filter shown with <input value={searchName} name=\"search_name\" onChange={onPhoneBookFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message.content === '') {\n    return null\n  }\n  const className = (message.type === 'error') ? 'error' : 'success'\n  return (\n    <div className={className}>\n      {message.content}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ message, setMessage] = useState({type: '', content: ''})\n\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons))\n  }, [])\n\n  const [ searchName, setSearchName ] = useState('')\n  const [ phoneBook, setPhoneBook ] = useState(\n    {name: '', number: ''}\n  )\n\n  const isDuplicate = () => {\n    return persons.find(person => person.name === phoneBook.name)\n  }\n\n  const handlePhoneBookFilter = (event) => {\n    if (event.target.name === 'search_name') {\n      setSearchName(event.target.value)\n    }\n  }\n\n  const handleFormSubmission = (event) => {\n    event.preventDefault()\n    if (isDuplicate()) {\n      if (window.confirm(`${phoneBook.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatePhoneBook = persons.find(person => person.name === phoneBook.name)\n        const changePhoneBook = { ...updatePhoneBook, number: phoneBook.number }\n        personService\n          .updatePhoneBook(updatePhoneBook.id, changePhoneBook)\n          .then(returnedPhoneBook => {\n            setPersons(persons.map(person => person.id !== updatePhoneBook.id ? person : returnedPhoneBook))\n          })\n          .catch(error => {\n            alert('the phonebook was updated failed')\n          })\n      }\n    } else if (phoneBook.name === '' || phoneBook.number === '') {\n      alert('You can NOT input empty number or name')\n    } else {\n      const phoneBookObject = {\n        name: phoneBook.name,\n        number: phoneBook.number,\n        id: persons.length + 1\n      }\n\n      personService\n        .createPhoneBook(phoneBookObject)\n        .then(returnedPhoneBook => {\n          setPersons(persons.concat(phoneBookObject))\n          const messageShow = {type: 'succes', content: `Added ${phoneBook.name}`}\n          setMessage(messageShow)\n        })\n        .catch(error => {\n          alert('the phonebook was created failed')\n        })\n    }\n    setPhoneBook({name: '', number: ''})\n    setSearchName('')\n  }\n\n  const handleInputChange = (event) => {\n    if (event.target.name === 'name') {\n      const newPhoneBook = {\n        ...phoneBook,\n        name: event.target.value\n      }\n      setPhoneBook(newPhoneBook)\n    }\n\n    if (event.target.name === 'number') {\n      const newPhoneBook = {\n        ...phoneBook,\n        number: event.target.value\n      }\n      setPhoneBook(newPhoneBook)\n    }\n  }\n\n  const handleClickDeletePerson = id => {\n    const deletePerson = persons.find(person => person.id === id)\n    personService\n      .deletePhoneBook(id)\n      .then(returnedPhoneBook => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      .catch(error => {\n        const messageShow = {type: 'error', content: `Information of ${deletePerson.name} has already been removed from server`}\n        setMessage(messageShow)\n      })\n  }\n\n  const allOfPerson = () => persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase().trim()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message}/>\n      <Filter\n        searchName={searchName}\n        onPhoneBookFilterChange={handlePhoneBookFilter}/>\n      <h3>Add a new</h3>\n      <PersonForm\n        onSubmissionChange={handleFormSubmission}\n        nameValue={phoneBook.name}\n        numberValue={phoneBook.number}\n        onInputChange={handleInputChange}\n      />\n      <Persons\n        persons={allOfPerson()} onClickDeletePerson={handleClickDeletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}