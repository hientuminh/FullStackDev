{"ast":null,"code":"import _slicedToArray from \"/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => {\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, text);\n};\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  let all = 0;\n  let average = 0;\n  let positive = 0;\n  all = good + bad + neutral;\n\n  if (good || bad || neutral) {\n    average = (good + neutral) / all;\n    positive = good / all;\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Statistics\"), React.createElement(Display, {\n    number: good,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: neutral,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: bad,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: all,\n    text: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: average,\n    text: \"average\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: positive,\n    text: \"positive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\n\nconst Display = ({\n  text,\n  number\n}) => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, text, \" \", number);\n};\n\nconst App = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    onClick: handleGood,\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutral,\n    text: \"Neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBad,\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","Statistics","good","neutral","bad","all","average","positive","Display","number","App","setGood","setNeutral","setBad","handleGood","handleBad","handleNeutral","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({onClick, text}) => {\n  return (\n    <button onClick={onClick}>{text}</button>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  let all = 0;\n  let average = 0;\n  let positive = 0;\n  all = (good + bad + neutral);\n  if (good || bad || neutral) {\n    average = (good  + neutral) / all;\n    positive = good / all;\n  }\n  return (\n    <div>\n      <h3>Statistics</h3>\n      <Display number={good} text='good'/>\n      <Display number={neutral} text='neutral'/>\n      <Display number={bad} text='bad'/>\n      <Display number={all} text='all'/>\n      <Display number={average} text='average'/>\n      <Display number={positive} text='positive'/>\n    </div>\n  )\n}\n\nconst Display = ({text, number}) => {\n  return (\n    <p>{text} {number}</p>\n  )\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n  }\n  const handleBad = () => {\n    setBad(bad +  1)\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral +  1)\n  }\n\n\n\n  return (\n    <div>\n      <h3>give feedback</h3>\n      <Button onClick={handleGood} text='Good'/>\n      <Button onClick={handleNeutral} text='Neutral'/>\n      <Button onClick={handleBad} text='Bad'/>\n\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}