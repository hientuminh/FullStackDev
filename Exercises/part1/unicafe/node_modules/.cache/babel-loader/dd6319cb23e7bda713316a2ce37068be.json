{"ast":null,"code":"import _slicedToArray from \"/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({\n  onClick,\n  text\n}) => {\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, text);\n};\n\nconst Display = ({\n  text,\n  number\n}) => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, text, \" \", number);\n};\n\nconst App = () => {\n  let average = 0;\n\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const handleGood = () => {\n    setGood(good + 1);\n  };\n\n  const handleBad = () => {\n    setBad(bad + 1);\n  };\n\n  const handleNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const summary = (good, bad, neutral) => () => {\n    (good + bad + neutral) / 3;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    onClick: handleGood,\n    text: \"Good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleBad,\n    text: \"Bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleNeutral,\n    text: \"Neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: good,\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: bad,\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: neutral,\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Display, {\n    number: summary(good, bad, neutral),\n    text: \"average\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/tuminhhien/Learning/FullStackDev/Exercises/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","onClick","text","Display","number","App","average","good","setGood","neutral","setNeutral","bad","setBad","handleGood","handleBad","handleNeutral","summary","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqB;AAClC,SACE;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,IAA3B,CADF;AAGD,CAJD;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAACD,EAAAA,IAAD;AAAOE,EAAAA;AAAP,CAAD,KAAoB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,OAAWE,MAAX,CADF;AAGD,CAJD;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIC,OAAO,GAAG,CAAd;;AADgB,oBAEQR,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETS,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcV,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTW,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMZ,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITa,GAJS;AAAA,QAIJC,MAJI;;AAMhB,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAGA,QAAMO,SAAS,GAAG,MAAM;AACtBF,IAAAA,MAAM,CAACD,GAAG,GAAI,CAAR,CAAN;AACD,GAFD;;AAGA,QAAMI,aAAa,GAAG,MAAM;AAC1BL,IAAAA,UAAU,CAACD,OAAO,GAAI,CAAZ,CAAV;AACD,GAFD;;AAIA,QAAMO,OAAO,GAAG,CAACT,IAAD,EAAOI,GAAP,EAAYF,OAAZ,KAAwB,MAAM;AAAE,KAACF,IAAI,GAAGI,GAAP,GAAaF,OAAd,IAA0B,CAA1B;AAA4B,GAA5E;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,SAAjB;AAA4B,IAAA,IAAI,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,aAAjB;AAAgC,IAAA,IAAI,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAME,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAER,IAAjB;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEI,GAAjB;AAAsB,IAAA,IAAI,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEF,OAAjB;AAA0B,IAAA,IAAI,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEO,OAAO,CAACT,IAAD,EAAOI,GAAP,EAAYF,OAAZ,CAAxB;AAA8C,IAAA,IAAI,EAAC,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAcD,CAhCD;;AAkCAV,QAAQ,CAACkB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = ({onClick, text}) => {\n  return (\n    <button onClick={onClick}>{text}</button>\n  )\n}\n\nconst Display = ({text, number}) => {\n  return (\n    <p>{text} {number}</p>\n  )\n}\n\nconst App = () => {\n  let average = 0;\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = () => {\n    setGood(good + 1)\n  }\n  const handleBad = () => {\n    setBad(bad +  1)\n  }\n  const handleNeutral = () => {\n    setNeutral(neutral +  1)\n  }\n\n  const summary = (good, bad, neutral) => () => { (good + bad + neutral ) / 3}\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={handleGood} text='Good'/>\n      <Button onClick={handleBad} text='Bad'/>\n      <Button onClick={handleNeutral} text='Neutral'/>\n\n      <Display number={good} text='good'/>\n      <Display number={bad} text='bad'/>\n      <Display number={neutral} text='neutral'/>\n      <Display number={summary(good, bad, neutral)} text='average'/>\n\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}